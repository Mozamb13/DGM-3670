global proc ControlWindow () { 
	
	string $mWindow = "ControlWindow";
	
	if(`window -exists $mWindow` == true)
		deleteUI -window $mWindow;
		
	$mWindow = `window -title "Create Control Window" -sizeable 0 $mWindow`;
	string $mColumn = `columnLayout -adjustableColumn 1 -columnAttach "both" 2 -parent $mWindow`;
	string $crclBtn = `button -parent $mColumn -label "Create Circle Ctrl"`;
	string $cubeBtn = `button -parent $mColumn -label "Create Cube Ctrl"`;
	string $sqreBtn = `button -parent $mColumn -label "Create Square Ctrl"`;
	string $clrSlider = `colorIndexSliderGrp -label "Color Ctrl" -visibleChangeCommand ("Colorcontrols(\""+$clrSlider+"\)") -minValue 1 -maxValue 32 -value 1`;
	button -e -command ("RunColor(\""+$clrSlider+"\",\"circle\")") $crclBtn;
	button -e -command ("RunColor(\""+$clrSlider+"\", \"cube\")") $cubeBtn;
	button -e -command ("RunColor(\""+$clrSlider+"\", \"square\")") $sqreBtn;
	
	
	window -e -width 400 -height 100 $mWindow;
	showWindow($mWindow);
	
}
global proc Createcontrols(int $color, string $type){
    string $selection[] = `ls -sl`;
    
  
         for ($sel in $selection){
           string $ctrl;
             if ($type == "circle") {
		    string $ctrls[] = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1 -name ($sel+"_Ctrl")`;
		    $ctrl = $ctrls[0];
	        }
	        else if($type == "square") {
		    $ctrl = `curve -d 1 -p 1 0 -1 -p -1 0 -1 -p -1 0 1 -p 1 0 1 -p 1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -name ($sel+"_Ctrl")`;
	        }
	        else if($type == "cube") {
		    $ctrl = `curve -d 1 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -name ($sel+"_Ctrl")` ;
	        }
	        print $ctrl;
           matchTransform $ctrl $sel;
           parentGroup($ctrl);
           Colorcontrols($ctrl, $color);
        }
   
}

global proc parentGroup(string $ctrl)
{
    string $selection[]= `ls -sl`;
    
    for ($sel in $selection)
    {
        string $parent[] = `listRelatives -parent -fullPath $sel`;
      
        string $grp = `group -empty - name ($sel + "_Grp")`;
        matchTransform $grp $sel;
        parent $sel $grp;
    
       
       if (size($parent) > 0 ){
           Print ($grp + "_" + $parent[0]);
           parent $grp $parent[0];
           }
          
    }
}
global proc Colorcontrols(string $ctrl, int $color){
    string $shapes[];
    $shapes = `listRelatives -shapes $ctrl`;
    
    for ($shape in $shapes) {
        if (`nodeType $shape` == "curve"){
            setAttr($shape + ".overrideEnabled") 1;
            setAttr($shape + ".overrideColor") $color;
        }

    }
    
}
global proc int GetColorField( string $control){
    int $value =` colorIndexSliderGrp -q -value $control`;
    return $value;
}
global proc RunColor(string $control, string $Choose){
    int $color = (` GetColorField ($control)`)-1;
    Createcontrols($color, $Choose);
}
ControlWindow ();